-- stealing is bad skids
local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\61\82","\22\19\124\19\203"),function(v42) if (v9(v42,2)==79) then local v103=0;while true do if (v103==0) then v30=v8(v11(v42,1,1));return "";end end else local v104=0;local v105;while true do if (v104==0) then v105=v10(v8(v42,16));if v30 then local v123=0;local v124;while true do if (v123==0) then v124=v13(v105,v30);v30=nil;v123=1;end if (v123==1) then return v124;end end else return v105;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v106=0;local v107;while true do if (v106==0) then v107=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v107-(v107%1) ;end end else local v108=0;local v109;while true do if (v108==0) then v109=2^(v44-1) ;return (((v43%(v109 + v109))>=v109) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==1) then v58=2 -1 ;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else local v125=0;while true do if (0==v125) then v60=1;v58=0;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -(2 -1)) or 1 ;v55=3;end end end local function v36(v62) local v63;if  not v62 then local v110=0;while true do if (v110==0) then v62=v34();if (v62==(0 -0)) then return "";end break;end end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v80=1,v69 do local v81=0;local v82;local v83;while true do if (v81==1) then if (v82==1) then v83=v32()~=0 ;elseif (v82==2) then v83=v35();elseif (v82==3) then v83=v36();end v70[v80]=v83;break;end if (v81==0) then v82=v32();v83=nil;v81=1;end end end v68[3]=v32();for v84=1,v34() do local v85=0;local v86;while true do if (v85==0) then v86=v32();if (v31(v86,1,1)==0) then local v119=v31(v86,2,3);local v120=v31(v86,4,6);local v121={v33(),v33(),nil,nil};if (v119==0) then v121[3]=v33();v121[4]=v33();elseif (v119==1) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^(41 -25)) ;elseif (v119==3) then v121[3]=v34() -(2^(635 -(555 + 64))) ;v121[4]=v33();end if (v31(v120,1,932 -(857 + 74) )==1) then v121[2]=v70[v121[2]];end if (v31(v120,2,2)==1) then v121[571 -(367 + 201) ]=v70[v121[3]];end if (v31(v120,3,3)==1) then v121[4]=v70[v121[4]];end v65[v84]=v121;end break;end end end for v87=1,v34() do v66[v87-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v89=v75;local v90=v76;local v91=v77;local v92=v38;local v93=1;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -1 ;local v98={};local v99={};for v111=0,v97 do if (v111>=v91) then v95[v111-v91 ]=v96[v111 + 1 ];else v99[v111]=v96[v111 + 1 ];end end local v100=(v97-v91) + 1 ;local v101;local v102;while true do v101=v89[v93];v102=v101[1];if (v102<=46) then if (v102<=22) then if (v102<=10) then if (v102<=(931 -(214 + 713))) then if (v102<=1) then if (v102>0) then v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;elseif (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=2) then v99[v101[2]]=v101[3];elseif (v102==3) then v99[v101[2]]=v101[1 + 2 ] + v99[v101[4]] ;else local v211=v101[2];v99[v211](v21(v99,v211 + 1 ,v101[3]));end elseif (v102<=7) then if (v102<=5) then local v141=0;local v142;local v143;while true do if (v141==0) then v142=v101[3];v143=v99[v142];v141=1;end if (v141==1) then for v377=v142 + 1 ,v101[4] do v143=v143   .. v99[v377] ;end v99[v101[2]]=v143;break;end end elseif (v102>6) then v99[v101[2]]=v101[3];else local v214=v101[2];local v215={v99[v214](v99[v214 + 1 ])};local v216=0;for v335=v214,v101[4] do local v336=0;while true do if (0==v336) then v216=v216 + 1 ;v99[v335]=v215[v216];break;end end end end elseif (v102<=8) then if v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==9) then local v218=0;local v219;while true do if (v218==0) then v219=v101[2];do return v21(v99,v219,v94);end break;end end else local v220=0;local v221;while true do if (0==v220) then v221=v101[2];v99[v221]=v99[v221](v21(v99,v221 + 1 ,v94));break;end end end elseif (v102<=16) then if (v102<=13) then if (v102<=11) then local v144=0;local v145;local v146;while true do if (0==v144) then v145=v101[2];v146=v99[v145];v144=1;end if (v144==1) then for v378=v145 + 1 ,v94 do v15(v146,v99[v378]);end break;end end elseif (v102>12) then v99[v101[1 + 1 ]]();else do return;end end elseif (v102<=14) then v99[v101[2]]=v99[v101[3]] + v101[4] ;elseif (v102==15) then local v222=v90[v101[3]];local v223;local v224={};v223=v18({},{[v7("\254\45\4\251\6\117\161","\217\161\114\109\149\98\16")]=function(v339,v340) local v341=0;local v342;while true do if (v341==0) then v342=v224[v340];return v342[878 -(282 + 595) ][v342[1639 -(1523 + 114) ]];end end end,[v7("\45\31\54\121\171\125\28\36\61\100","\20\114\64\88\28\220")]=function(v343,v344,v345) local v346=0;local v347;while true do if (v346==0) then v347=v224[v344];v347[1][v347[2]]=v345;break;end end end});for v348=1,v101[4] do local v349=0;local v350;while true do if (v349==1) then if (v350[1]==84) then v224[v348-1 ]={v99,v350[3]};else v224[v348-1 ]={v73,v350[3]};end v98[ #v98 + 1 ]=v224;break;end if (v349==0) then v93=v93 + 1 ;v350=v89[v93];v349=1;end end end v99[v101[2]]=v40(v222,v223,v74);else local v226=0;local v227;while true do if (0==v226) then v227=v101[2];v99[v227]=v99[v227](v99[v227 + 1 + 0 ]);break;end end end elseif (v102<=19) then if (v102<=17) then if (v101[2 -0 ]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==18) then v99[v101[2]]=v73[v101[3]];else local v231=0;local v232;local v233;local v234;while true do if (v231==0) then v232=v90[v101[3]];v233=nil;v231=1;end if (v231==1) then v234={};v233=v18({},{[v7("\14\62\219\186\252\213\165","\221\81\97\178\212\152\176")]=function(v437,v438) local v439=0;local v440;while true do if (v439==0) then v440=v234[v438];return v440[1][v440[2]];end end end,[v7("\242\216\19\254\13\196\233\25\254\2","\122\173\135\125\155")]=function(v441,v442,v443) local v444=0;local v445;while true do if (v444==0) then v445=v234[v442];v445[1066 -(68 + 997) ][v445[2]]=v443;break;end end end});v231=2;end if (2==v231) then for v446=1,v101[4] do local v447=0;local v448;while true do if (v447==0) then v93=v93 + 1 ;v448=v89[v93];v447=1;end if (v447==1) then if (v448[1]==(1354 -(226 + 1044))) then v234[v446-1 ]={v99,v448[3]};else v234[v446-(4 -3) ]={v73,v448[3]};end v98[ #v98 + 1 ]=v234;break;end end end v99[v101[2]]=v40(v232,v233,v74);break;end end end elseif (v102<=20) then local v148=0;local v149;local v150;while true do if (v148==0) then v149=v101[120 -(32 + 85) ];v150=v99[v149];v148=1;end if (1==v148) then for v379=v149 + 1 ,v101[4] do v150=v150   .. v99[v379] ;end v99[v101[2]]=v150;break;end end elseif (v102>21) then local v235=v101[2 + 0 ];local v236,v237=v92(v99[v235](v99[v235 + 1 ]));v94=(v237 + v235) -(1 + 0) ;local v238=0;for v354=v235,v94 do v238=v238 + 1 ;v99[v354]=v236[v238];end else v99[v101[2]]=v40(v90[v101[3]],nil,v74);end elseif (v102<=34) then if (v102<=28) then if (v102<=25) then if (v102<=23) then v99[v101[959 -(892 + 65) ]]= #v99[v101[3]];elseif (v102>(56 -32)) then local v240=0;local v241;local v242;local v243;while true do if (v240==0) then v241=v101[2];v242=v99[v241 + 2 ];v240=1;end if (v240==1) then v243=v99[v241] + v242 ;v99[v241]=v243;v240=2;end if (v240==2) then if (v242>0) then if (v243<=v99[v241 + 1 ]) then local v481=0;while true do if (0==v481) then v93=v101[3];v99[v241 + 3 ]=v243;break;end end end elseif (v243>=v99[v241 + 1 ]) then local v482=0;while true do if (v482==0) then v93=v101[3];v99[v241 + 3 ]=v243;break;end end end break;end end else local v244=0;local v245;while true do if (v244==0) then v245=v101[2];v99[v245]=v99[v245](v99[v245 + 1 ]);break;end end end elseif (v102<=26) then v99[v101[2]]=v73[v101[3]];elseif (v102>27) then do return;end else local v246=0;local v247;local v248;local v249;while true do if (v246==1) then v249=v99[v247 + 2 ];if (v249>0) then if (v248>v99[v247 + 1 ]) then v93=v101[3];else v99[v247 + 3 ]=v248;end elseif (v248<v99[v247 + 1 ]) then v93=v101[3];else v99[v247 + 3 ]=v248;end break;end if (v246==0) then v247=v101[2];v248=v99[v247];v246=1;end end end elseif (v102<=31) then if (v102<=29) then if (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[5 -2 ];end elseif (v102>30) then v99[v101[2]]();else local v251=0;local v252;local v253;local v254;local v255;while true do if (v251==1) then v94=(v254 + v252) -1 ;v255=0;v251=2;end if (v251==0) then v252=v101[2];v253,v254=v92(v99[v252](v21(v99,v252 + 1 ,v101[3])));v251=1;end if (v251==2) then for v449=v252,v94 do local v450=0;while true do if (v450==0) then v255=v255 + 1 ;v99[v449]=v253[v255];break;end end end break;end end end elseif (v102<=32) then local v154=0;local v155;while true do if (v154==0) then v155=v101[2];v99[v155]=v99[v155](v21(v99,v155 + 1 ,v101[4 -1 ]));break;end end elseif (v102>33) then local v256=0;local v257;while true do if (v256==0) then v257=v101[2];v99[v257](v99[v257 + (351 -(87 + 263)) ]);break;end end else v99[v101[2]]= #v99[v101[183 -(67 + 113) ]];end elseif (v102<=40) then if (v102<=37) then if (v102<=35) then local v156=v101[2];local v157=v99[v101[3]];v99[v156 + 1 + 0 ]=v157;v99[v156]=v157[v101[4]];elseif (v102>36) then v99[v101[2]]=v99[v101[3]]%v101[9 -5 ] ;else local v260=0;local v261;while true do if (v260==0) then v261=v101[2];v99[v261]=v99[v261]();break;end end end elseif (v102<=38) then if  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==39) then local v263=0;local v264;local v265;while true do if (1==v263) then for v451=v264 + 1 + 0 ,v94 do v15(v265,v99[v451]);end break;end if (v263==0) then v264=v101[2];v265=v99[v264];v263=1;end end else v74[v101[3]]=v99[v101[2]];end elseif (v102<=43) then if (v102<=(162 -121)) then v74[v101[955 -(802 + 150) ]]=v99[v101[2]];elseif (v102==42) then local v268=0;local v269;local v270;while true do if (v268==1) then for v452=1, #v98 do local v453=v98[v452];for v459=0, #v453 do local v460=0;local v461;local v462;local v463;while true do if (v460==1) then v463=v461[5 -3 ];if ((v462==v99) and (v463>=v269)) then local v512=0;while true do if (v512==0) then v270[v463]=v462[v463];v461[1]=v270;break;end end end break;end if (v460==0) then v461=v453[v459];v462=v461[1];v460=1;end end end end break;end if (v268==0) then v269=v101[2];v270={};v268=1;end end else v99[v101[2]]={};end elseif (v102<=44) then v99[v101[2]]=v99[v101[3]]%v99[v101[6 -2 ]] ;elseif (v102==45) then do return v99[v101[2]]();end else for v359=v101[2 + 0 ],v101[3] do v99[v359]=nil;end end elseif (v102<=69) then if (v102<=57) then if (v102<=51) then if (v102<=48) then if (v102==47) then local v164=v101[2];local v165=v101[4];local v166=v164 + 2 ;local v167={v99[v164](v99[v164 + 1 ],v99[v166])};for v206=2 -1 ,v165 do v99[v166 + v206 ]=v167[v206];end local v168=v167[1];if v168 then v99[v166]=v168;v93=v101[2 + 1 ];else v93=v93 + 1 ;end else v99[v101[2]][v99[v101[3]]]=v99[v101[4]];end elseif (v102<=49) then local v171=0;local v172;local v173;local v174;local v175;while true do if (v171==1) then v94=(v174 + v172) -1 ;v175=0;v171=2;end if (2==v171) then for v380=v172,v94 do local v381=0;while true do if (v381==0) then v175=v175 + 1 ;v99[v380]=v173[v175];break;end end end break;end if (v171==0) then v172=v101[2];v173,v174=v92(v99[v172](v21(v99,v172 + 1 ,v94)));v171=1;end end elseif (v102==50) then v99[v101[2]]=v99[v101[3 -0 ]] + v101[4] ;else do return v99[v101[1189 -(1069 + 118) ]]();end end elseif (v102<=(122 -68)) then if (v102<=52) then local v176=0;local v177;while true do if (v176==0) then v177=v101[2];do return v99[v177](v21(v99,v177 + 1 ,v101[3]));end break;end end elseif (v102>53) then for v363=v101[2],v101[3] do v99[v363]=nil;end elseif  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=55) then local v178=0;local v179;local v180;local v181;while true do if (v178==1) then v181=0;for v383=v179,v101[4] do local v384=0;while true do if (v384==0) then v181=v181 + 1 + 0 ;v99[v383]=v180[v181];break;end end end break;end if (0==v178) then v179=v101[3 -1 ];v180={v99[v179](v99[v179 + 1 ])};v178=1;end end elseif (v102==56) then v99[v101[3 -1 ]][v99[v101[3 + 0 ]]]=v99[v101[4]];else local v277=0;local v278;while true do if (v277==0) then v278=v101[2];v99[v278](v99[v278 + 1 ]);break;end end end elseif (v102<=63) then if (v102<=60) then if (v102<=(849 -(368 + 423))) then v99[v101[2]]=v99[v101[3]][v101[4]];elseif (v102==59) then v99[v101[2]]={};else local v280=v101[2];local v281=v101[4];local v282=v280 + 2 ;local v283={v99[v280](v99[v280 + 1 ],v99[v282])};for v366=1,v281 do v99[v282 + v366 ]=v283[v366];end local v284=v283[1];if v284 then local v385=0;while true do if (v385==0) then v99[v282]=v284;v93=v101[9 -6 ];break;end end else v93=v93 + 1 ;end end elseif (v102<=61) then local v184=0;local v185;local v186;local v187;local v188;while true do if (v184==2) then for v386=v185,v94 do local v387=0;while true do if (v387==0) then v188=v188 + 1 ;v99[v386]=v186[v188];break;end end end break;end if (v184==0) then v185=v101[2];v186,v187=v92(v99[v185](v21(v99,v185 + 1 ,v101[3])));v184=1;end if (v184==1) then v94=(v187 + v185) -1 ;v188=0;v184=2;end end elseif (v102==62) then local v285=0;local v286;local v287;local v288;while true do if (v285==1) then v288=v99[v286 + 2 ];if (v288>0) then if (v287>v99[v286 + 1 ]) then v93=v101[3];else v99[v286 + 3 ]=v287;end elseif (v287<v99[v286 + (19 -(10 + 8)) ]) then v93=v101[3];else v99[v286 + 3 ]=v287;end break;end if (v285==0) then v286=v101[2];v287=v99[v286];v285=1;end end else v99[v101[2]]=v99[v101[11 -8 ]]%v101[446 -(416 + 26) ] ;end elseif (v102<=66) then if (v102<=64) then local v189=0;local v190;while true do if (v189==0) then v190=v101[2];v99[v190](v21(v99,v190 + (3 -2) ,v94));break;end end elseif (v102>65) then local v290=0;local v291;while true do if (0==v290) then v291=v101[2];v99[v291](v21(v99,v291 + 1 ,v94));break;end end else local v292=0;local v293;local v294;local v295;while true do if (v292==2) then if (v294>0) then if (v295<=v99[v293 + 1 ]) then local v493=0;while true do if (v493==0) then v93=v101[3];v99[v293 + 3 ]=v295;break;end end end elseif (v295>=v99[v293 + 1 ]) then v93=v101[3];v99[v293 + 3 ]=v295;end break;end if (1==v292) then v295=v99[v293] + v294 ;v99[v293]=v295;v292=2;end if (0==v292) then v293=v101[2];v294=v99[v293 + 2 ];v292=1;end end end elseif (v102<=(29 + 38)) then local v191=v101[2];v99[v191](v21(v99,v191 + 1 ,v101[3]));elseif (v102>68) then local v296=0;local v297;local v298;while true do if (v296==1) then for v454=1, #v98 do local v455=0;local v456;while true do if (v455==0) then v456=v98[v454];for v502=0 -0 , #v456 do local v503=v456[v502];local v504=v503[1];local v505=v503[2];if ((v504==v99) and (v505>=v297)) then local v515=0;while true do if (v515==0) then v298[v505]=v504[v505];v503[1]=v298;break;end end end end break;end end end break;end if (0==v296) then v297=v101[2];v298={};v296=1;end end else v99[v101[2]]=v101[3] + v99[v101[4]] ;end elseif (v102<=(519 -(145 + 293))) then if (v102<=75) then if (v102<=72) then if (v102<=(500 -(44 + 386))) then v99[v101[2]]=v40(v90[v101[3]],nil,v74);elseif (v102>71) then local v300=0;local v301;while true do if (v300==0) then v301=v101[2];do return v99[v301](v21(v99,v301 + 1 ,v101[3]));end break;end end else v99[v101[2]]=v99[v101[3]];end elseif (v102<=73) then local v193=0;local v194;local v195;while true do if (v193==1) then v99[v194 + (1487 -(998 + 488)) ]=v195;v99[v194]=v195[v101[4]];break;end if (v193==0) then v194=v101[2];v195=v99[v101[3]];v193=1;end end elseif (v102>74) then local v304=0;local v305;while true do if (v304==0) then v305=v101[2];v99[v305]=v99[v305](v21(v99,v305 + 1 ,v101[1 + 2 ]));break;end end else v99[v101[2]][v101[3]]=v99[v101[4]];end elseif (v102<=(64 + 14)) then if (v102<=76) then v99[v101[2]][v101[3]]=v99[v101[4]];elseif (v102==(849 -(201 + 571))) then if (v101[2]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[2]]=v74[v101[3]];end elseif (v102<=(1217 -(116 + 1022))) then v93=v101[3];elseif (v102==80) then local v310=0;local v311;while true do if (0==v310) then v311=v101[2];v99[v311]=v99[v311]();break;end end else v93=v101[3];end elseif (v102<=87) then if (v102<=84) then if (v102<=82) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==83) then local v314=0;local v315;while true do if (v314==0) then v315=v101[2];do return v21(v99,v315,v94);end break;end end else v99[v101[2]]=v99[v101[3]];end elseif (v102<=85) then local v199=0;local v200;local v201;local v202;local v203;while true do if (v199==2) then for v389=v200,v94 do local v390=0;while true do if (v390==0) then v203=v203 + 1 ;v99[v389]=v201[v203];break;end end end break;end if (v199==1) then v94=(v202 + v200) -1 ;v203=0;v199=2;end if (v199==0) then v200=v101[2];v201,v202=v92(v99[v200](v21(v99,v200 + 1 ,v94)));v199=1;end end elseif (v102==86) then local v318=v101[2];v99[v318]=v99[v318](v21(v99,v318 + (4 -3) ,v94));else v99[v101[2]][v101[3]]=v101[4];end elseif (v102<=90) then if (v102<=88) then v99[v101[2]]=v74[v101[3]];elseif (v102==89) then v99[v101[2]]=v99[v101[3]][v101[4]];elseif v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=91) then if (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[2 + 1 ];end elseif (v102==(335 -243)) then local v325=0;local v326;local v327;local v328;local v329;while true do if (1==v325) then v94=(v328 + v326) -1 ;v329=0;v325=2;end if (v325==0) then v326=v101[2];v327,v328=v92(v99[v326](v99[v326 + 1 ]));v325=1;end if (v325==2) then for v457=v326,v94 do local v458=0;while true do if (v458==0) then v329=v329 + (3 -2) ;v99[v457]=v327[v329];break;end end end break;end end else v99[v101[2]][v101[3]]=v101[4];end v93=v93 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
